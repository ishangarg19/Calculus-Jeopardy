/**
 * Names: Ishan Garg, Krish Patel, Pranav Mahabal
 * Course: MCV4U0-1
 * Date: January 18, 2023
 * Teacher: Ms Iulia Gugoiu
 * 
 * Generates the GUI, which loads the questions and takes user input.
 */


import java.awt.*;
import java.io.*;
import javax.sound.sampled.*;

public class AskQuestion extends javax.swing.JDialog {

    //Game mechanics
    private int[] playerScores;
    private boolean[] mystPressed;
    private boolean[] diffPressed;
    private boolean[] applyDiffPressed;
    private boolean[] applyIntPressed;
    private boolean[] intPressed;
    private String questionType;
    private int ptsAdded;
    private int turn;
    private int numPlayers;
    private boolean activeQuestion;
    
    //Question generators
    private MysteryQuestions mystQ;
    private DiffQuestions diffQ;
    private ApplyDiffQuestions applyDiffQ;
    private ApplyIntQuestions applyIntQ;
    private IntegrationQuestions intQ;
    
    //Audio files
    private File introFile;
    private File correctFile;
    private File incorrectFile;
    private AudioInputStream intro;
    private AudioInputStream correct;
    private AudioInputStream incorrect;
    private Clip clip;
    
    /**
     * Class constructor.
     * @param parent Creates the GUI.
     * @param modal Creates the GUI.
     * @param numPlayers Number of players (max 2).
     * @param mystQ Retrieves a question generator.
     * @param diffQ Retrieves a question generator.
     * @param applyDiffQ Retrieves a question generator.
     * @param applyIntQ Retrieves a question generator.
     * @param intQ Retrieves a question generator.
     */
    public AskQuestion(java.awt.Frame parent, boolean modal, int numPlayers, MysteryQuestions mystQ, DiffQuestions diffQ, ApplyDiffQuestions applyDiffQ, ApplyIntQuestions applyIntQ, IntegrationQuestions intQ) {
        super(parent, modal);
        
        mystPressed = new boolean[5];
        diffPressed = new boolean[5];
        applyDiffPressed = new boolean[5];
        applyIntPressed = new boolean[5];
        intPressed = new boolean[5];
        
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("resources\\icon.png"));
        this.getContentPane().setBackground(new Color(0,0,0));
        
        ptsAdded = 0;
        questionType = "";
        activeQuestion = false;
        
        turn = 1;
        
        playerScores = new int[numPlayers];
        this.numPlayers = numPlayers;
        
        this.applyIntQ = applyIntQ;
        this.intQ = intQ;
        this.mystQ = mystQ;
        this.diffQ = diffQ;
        this.applyDiffQ = applyDiffQ;

        try {
            introFile = new File("resources\\intro.wav");
            correctFile = new File("resources\\correct.wav");
            incorrectFile = new File("resources\\incorrect.wav");
            
            intro = AudioSystem.getAudioInputStream(introFile);
            correct = AudioSystem.getAudioInputStream(correctFile);
            incorrect = AudioSystem.getAudioInputStream(incorrectFile);
            
            clip = AudioSystem.getClip();
            
            clip.open(intro);
            clip.start();
        } catch (Exception e) {}
        
        initComponents();
    }

    /**
     * Method to draw the GUI components. 
     * 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jOptionPane1 = new javax.swing.JOptionPane();
        menuTitle = new javax.swing.JLabel();
        myst1 = new javax.swing.JButton();
        myst2 = new javax.swing.JButton();
        myst3 = new javax.swing.JButton();
        myst4 = new javax.swing.JButton();
        myst5 = new javax.swing.JButton();
        diff1 = new javax.swing.JButton();
        diff2 = new javax.swing.JButton();
        diff3 = new javax.swing.JButton();
        diff4 = new javax.swing.JButton();
        diff5 = new javax.swing.JButton();
        applyDiff1 = new javax.swing.JButton();
        applyDiff2 = new javax.swing.JButton();
        applyDiff3 = new javax.swing.JButton();
        applyDiff4 = new javax.swing.JButton();
        applyDiff5 = new javax.swing.JButton();
        applyInt1 = new javax.swing.JButton();
        applyInt2 = new javax.swing.JButton();
        applyInt3 = new javax.swing.JButton();
        applyInt4 = new javax.swing.JButton();
        applyInt5 = new javax.swing.JButton();
        int1 = new javax.swing.JButton();
        int2 = new javax.swing.JButton();
        int3 = new javax.swing.JButton();
        int4 = new javax.swing.JButton();
        int5 = new javax.swing.JButton();
        player1Label = new javax.swing.JTextField();
        player2Label = new javax.swing.JTextField();
        answerField = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionLabel = new javax.swing.JTextArea();
        help = new javax.swing.JButton();
        restart = new javax.swing.JButton();
        creditsLabel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mysteryLabel = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        mysteryLabel1 = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        mysteryLabel2 = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        mysteryLabel3 = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        mysteryLabel4 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultLabel = new javax.swing.JTextArea();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Calculus Jeopardy");
        setBackground(new java.awt.Color(255, 213, 0));
        setForeground(new java.awt.Color(204, 204, 204));

        menuTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        menuTitle.setForeground(new java.awt.Color(255, 255, 255));
        menuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuTitle.setText("Calculus Jeopardy");
        menuTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        myst1.setBackground(new java.awt.Color(10, 14, 169));
        myst1.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        myst1.setForeground(new java.awt.Color(255, 213, 0));
        myst1.setText("100");
        myst1.setBorder(null);
        myst1.setBorderPainted(false);
        myst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myst1ActionPerformed(evt);
            }
        });

        myst2.setBackground(new java.awt.Color(10, 14, 169));
        myst2.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        myst2.setForeground(new java.awt.Color(255, 213, 0));
        myst2.setText("200");
        myst2.setBorder(null);
        myst2.setBorderPainted(false);
        myst2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myst2ActionPerformed(evt);
            }
        });

        myst3.setBackground(new java.awt.Color(10, 14, 169));
        myst3.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        myst3.setForeground(new java.awt.Color(255, 213, 0));
        myst3.setText("300");
        myst3.setBorder(null);
        myst3.setBorderPainted(false);
        myst3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myst3ActionPerformed(evt);
            }
        });

        myst4.setBackground(new java.awt.Color(10, 14, 169));
        myst4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        myst4.setForeground(new java.awt.Color(255, 213, 0));
        myst4.setText("400");
        myst4.setBorder(null);
        myst4.setBorderPainted(false);
        myst4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myst4ActionPerformed(evt);
            }
        });

        myst5.setBackground(new java.awt.Color(10, 14, 169));
        myst5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        myst5.setForeground(new java.awt.Color(255, 213, 0));
        myst5.setText("500");
        myst5.setBorder(null);
        myst5.setBorderPainted(false);
        myst5.setName(""); // NOI18N
        myst5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myst5ActionPerformed(evt);
            }
        });

        diff1.setBackground(new java.awt.Color(10, 14, 169));
        diff1.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        diff1.setForeground(new java.awt.Color(255, 213, 0));
        diff1.setText("100");
        diff1.setBorder(null);
        diff1.setBorderPainted(false);
        diff1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diff1ActionPerformed(evt);
            }
        });

        diff2.setBackground(new java.awt.Color(10, 14, 169));
        diff2.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        diff2.setForeground(new java.awt.Color(255, 213, 0));
        diff2.setText("200");
        diff2.setBorder(null);
        diff2.setBorderPainted(false);
        diff2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diff2ActionPerformed(evt);
            }
        });

        diff3.setBackground(new java.awt.Color(10, 14, 169));
        diff3.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        diff3.setForeground(new java.awt.Color(255, 213, 0));
        diff3.setText("300");
        diff3.setBorder(null);
        diff3.setBorderPainted(false);
        diff3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diff3ActionPerformed(evt);
            }
        });

        diff4.setBackground(new java.awt.Color(10, 14, 169));
        diff4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        diff4.setForeground(new java.awt.Color(255, 213, 0));
        diff4.setText("400");
        diff4.setBorder(null);
        diff4.setBorderPainted(false);
        diff4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diff4ActionPerformed(evt);
            }
        });

        diff5.setBackground(new java.awt.Color(10, 14, 169));
        diff5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        diff5.setForeground(new java.awt.Color(255, 213, 0));
        diff5.setText("500");
        diff5.setBorder(null);
        diff5.setBorderPainted(false);
        diff5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diff5ActionPerformed(evt);
            }
        });

        applyDiff1.setBackground(new java.awt.Color(10, 14, 169));
        applyDiff1.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyDiff1.setForeground(new java.awt.Color(255, 213, 0));
        applyDiff1.setText("100");
        applyDiff1.setBorder(null);
        applyDiff1.setBorderPainted(false);
        applyDiff1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDiff1ActionPerformed(evt);
            }
        });

        applyDiff2.setBackground(new java.awt.Color(10, 14, 169));
        applyDiff2.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyDiff2.setForeground(new java.awt.Color(255, 213, 0));
        applyDiff2.setText("200");
        applyDiff2.setBorder(null);
        applyDiff2.setBorderPainted(false);
        applyDiff2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDiff2ActionPerformed(evt);
            }
        });

        applyDiff3.setBackground(new java.awt.Color(10, 14, 169));
        applyDiff3.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyDiff3.setForeground(new java.awt.Color(255, 213, 0));
        applyDiff3.setText("300");
        applyDiff3.setBorder(null);
        applyDiff3.setBorderPainted(false);
        applyDiff3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDiff3ActionPerformed(evt);
            }
        });

        applyDiff4.setBackground(new java.awt.Color(10, 14, 169));
        applyDiff4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyDiff4.setForeground(new java.awt.Color(255, 213, 0));
        applyDiff4.setText("400");
        applyDiff4.setBorder(null);
        applyDiff4.setBorderPainted(false);
        applyDiff4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDiff4ActionPerformed(evt);
            }
        });

        applyDiff5.setBackground(new java.awt.Color(10, 14, 169));
        applyDiff5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyDiff5.setForeground(new java.awt.Color(255, 213, 0));
        applyDiff5.setText("500");
        applyDiff5.setBorder(null);
        applyDiff5.setBorderPainted(false);
        applyDiff5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDiff5ActionPerformed(evt);
            }
        });

        applyInt1.setBackground(new java.awt.Color(10, 14, 169));
        applyInt1.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyInt1.setForeground(new java.awt.Color(255, 213, 0));
        applyInt1.setText("100");
        applyInt1.setBorder(null);
        applyInt1.setBorderPainted(false);
        applyInt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyInt1ActionPerformed(evt);
            }
        });

        applyInt2.setBackground(new java.awt.Color(10, 14, 169));
        applyInt2.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyInt2.setForeground(new java.awt.Color(255, 213, 0));
        applyInt2.setText("200");
        applyInt2.setBorder(null);
        applyInt2.setBorderPainted(false);
        applyInt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyInt2ActionPerformed(evt);
            }
        });

        applyInt3.setBackground(new java.awt.Color(10, 14, 169));
        applyInt3.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyInt3.setForeground(new java.awt.Color(255, 213, 0));
        applyInt3.setText("300");
        applyInt3.setBorder(null);
        applyInt3.setBorderPainted(false);
        applyInt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyInt3ActionPerformed(evt);
            }
        });

        applyInt4.setBackground(new java.awt.Color(10, 14, 169));
        applyInt4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyInt4.setForeground(new java.awt.Color(255, 213, 0));
        applyInt4.setText("400");
        applyInt4.setBorder(null);
        applyInt4.setBorderPainted(false);
        applyInt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyInt4ActionPerformed(evt);
            }
        });

        applyInt5.setBackground(new java.awt.Color(10, 14, 169));
        applyInt5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        applyInt5.setForeground(new java.awt.Color(255, 213, 0));
        applyInt5.setText("500");
        applyInt5.setBorder(null);
        applyInt5.setBorderPainted(false);
        applyInt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyInt5ActionPerformed(evt);
            }
        });

        int1.setBackground(new java.awt.Color(10, 14, 169));
        int1.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        int1.setForeground(new java.awt.Color(255, 213, 0));
        int1.setText("100");
        int1.setBorder(null);
        int1.setBorderPainted(false);
        int1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int1ActionPerformed(evt);
            }
        });

        int2.setBackground(new java.awt.Color(10, 14, 169));
        int2.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        int2.setForeground(new java.awt.Color(255, 213, 0));
        int2.setText("200");
        int2.setBorder(null);
        int2.setBorderPainted(false);
        int2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int2ActionPerformed(evt);
            }
        });

        int3.setBackground(new java.awt.Color(10, 14, 169));
        int3.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        int3.setForeground(new java.awt.Color(255, 213, 0));
        int3.setText("300");
        int3.setBorder(null);
        int3.setBorderPainted(false);
        int3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int3ActionPerformed(evt);
            }
        });

        int4.setBackground(new java.awt.Color(10, 14, 169));
        int4.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        int4.setForeground(new java.awt.Color(255, 213, 0));
        int4.setText("400");
        int4.setBorder(null);
        int4.setBorderPainted(false);
        int4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int4ActionPerformed(evt);
            }
        });

        int5.setBackground(new java.awt.Color(10, 14, 169));
        int5.setFont(new java.awt.Font("Swis721 Cn BT", 1, 36)); // NOI18N
        int5.setForeground(new java.awt.Color(255, 213, 0));
        int5.setText("500");
        int5.setBorder(null);
        int5.setBorderPainted(false);
        int5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int5ActionPerformed(evt);
            }
        });

        player1Label.setEditable(false);
        player1Label.setBackground(new java.awt.Color(230, 255, 251));
        player1Label.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        player1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        player1Label.setText("Player 1 Score: " + String.valueOf(playerScores[0])
        );

        player2Label.setEditable(false);
        player2Label.setBackground(new java.awt.Color(255, 230, 234));
        player2Label.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        player2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        player2Label.setText("Player 2 Score: " + String.valueOf(playerScores[1])
        );

        answerField.setForeground(new java.awt.Color(125, 125, 125));
        answerField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        answerField.setToolTipText("");
        answerField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        answerField.setName(""); // NOI18N

        check.setBackground(new java.awt.Color(204, 255, 204));
        check.setText("Check");
        check.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        check.setBorderPainted(false);
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        turnLabel.setBackground(new java.awt.Color(230, 255, 251));
        turnLabel.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        turnLabel.setForeground(new java.awt.Color(6, 12, 223));
        turnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        turnLabel.setText("Player " + turn + "'s Turn");
        turnLabel.setOpaque(true);

        questionLabel.setEditable(false);
        questionLabel.setBackground(new java.awt.Color(10, 14, 169));
        questionLabel.setColumns(20);
        questionLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        questionLabel.setForeground(new java.awt.Color(255, 213, 0));
        questionLabel.setLineWrap(true);
        questionLabel.setRows(5);
        questionLabel.setText("  1. Select a question.\n  2. The question will appear at the bottom (here). \n  3. "
            + "Answer with two decimal places, even if the answer is a whole \n      number. Assume radians "
            + "for trigonometric functions.\n  4. Check who's turn it is in the top right corner.");
        questionLabel.setWrapStyleWord(true);
        jScrollPane1.setViewportView(questionLabel);

        help.setBackground(new java.awt.Color(204, 255, 204));
        help.setText("Help");
        help.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        help.setBorderPainted(false);
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        restart.setBackground(new java.awt.Color(204, 255, 204));
        restart.setText("Restart");
        restart.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        restart.setBorderPainted(false);
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });

        creditsLabel.setBackground(new java.awt.Color(204, 255, 204));
        creditsLabel.setText("Credits");
        creditsLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        creditsLabel.setBorderPainted(false);
        creditsLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditsLabelActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(115, 40));
        jScrollPane2.setWheelScrollingEnabled(false);

        mysteryLabel.setEditable(false);
        mysteryLabel.setBackground(new java.awt.Color(10, 14, 169));
        mysteryLabel.setColumns(20);
        mysteryLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mysteryLabel.setForeground(new java.awt.Color(255, 255, 255));
        mysteryLabel.setLineWrap(true);
        mysteryLabel.setRows(1);
        mysteryLabel.setText("         Mystery !?");
        mysteryLabel.setWrapStyleWord(true);
        mysteryLabel.setBorder(null);
        mysteryLabel.setName(""); // NOI18N
        mysteryLabel.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(mysteryLabel);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane7.setPreferredSize(new java.awt.Dimension(115, 40));
        jScrollPane7.setWheelScrollingEnabled(false);

        mysteryLabel1.setEditable(false);
        mysteryLabel1.setBackground(new java.awt.Color(10, 14, 169));
        mysteryLabel1.setColumns(20);
        mysteryLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mysteryLabel1.setForeground(new java.awt.Color(255, 255, 255));
        mysteryLabel1.setLineWrap(true);
        mysteryLabel1.setRows(1);
        mysteryLabel1.setText("    Differentiation");
        mysteryLabel1.setWrapStyleWord(true);
        mysteryLabel1.setBorder(null);
        jScrollPane7.setViewportView(mysteryLabel1);

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane8.setPreferredSize(new java.awt.Dimension(115, 40));
        jScrollPane8.setWheelScrollingEnabled(false);

        mysteryLabel2.setEditable(false);
        mysteryLabel2.setBackground(new java.awt.Color(10, 14, 169));
        mysteryLabel2.setColumns(20);
        mysteryLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mysteryLabel2.setForeground(new java.awt.Color(255, 255, 255));
        mysteryLabel2.setLineWrap(true);
        mysteryLabel2.setRows(1);
        mysteryLabel2.setText("    Applications of \n    Differentation");
        mysteryLabel2.setWrapStyleWord(true);
        mysteryLabel2.setBorder(null);
        jScrollPane8.setViewportView(mysteryLabel2);

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane9.setPreferredSize(new java.awt.Dimension(115, 40));
        jScrollPane9.setWheelScrollingEnabled(false);

        mysteryLabel3.setEditable(false);
        mysteryLabel3.setBackground(new java.awt.Color(10, 14, 169));
        mysteryLabel3.setColumns(20);
        mysteryLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mysteryLabel3.setForeground(new java.awt.Color(255, 255, 255));
        mysteryLabel3.setLineWrap(true);
        mysteryLabel3.setRows(1);
        mysteryLabel3.setText("    Applications of \n       Integration");
        mysteryLabel3.setWrapStyleWord(true);
        mysteryLabel3.setBorder(null);
        jScrollPane9.setViewportView(mysteryLabel3);

        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane10.setPreferredSize(new java.awt.Dimension(115, 40));
        jScrollPane10.setWheelScrollingEnabled(false);

        mysteryLabel4.setEditable(false);
        mysteryLabel4.setBackground(new java.awt.Color(10, 14, 169));
        mysteryLabel4.setColumns(20);
        mysteryLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mysteryLabel4.setForeground(new java.awt.Color(255, 255, 255));
        mysteryLabel4.setLineWrap(true);
        mysteryLabel4.setRows(1);
        mysteryLabel4.setText("         Integration");
        mysteryLabel4.setWrapStyleWord(true);
        mysteryLabel4.setBorder(null);
        jScrollPane10.setViewportView(mysteryLabel4);

        resultLabel.setEditable(false);
        resultLabel.setBackground(new java.awt.Color(0, 0, 0));
        resultLabel.setColumns(20);
        resultLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        resultLabel.setForeground(new java.awt.Color(255, 255, 255));
        resultLabel.setLineWrap(true);
        resultLabel.setRows(2);
        resultLabel.setWrapStyleWord(true);
        jScrollPane3.setViewportView(resultLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(help, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(restart, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(menuTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(turnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(answerField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(diff1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(diff4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(diff3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(diff2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(diff5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(applyDiff1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(applyDiff4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(applyDiff3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(applyDiff2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(applyDiff5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(int1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(int4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(int3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(int2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(int5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(applyInt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyInt4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyInt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyInt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyInt5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(myst1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(myst4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(myst3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(myst2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(myst5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(8, 8, 8)))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(player2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(help)
                    .addComponent(restart)
                    .addComponent(creditsLabel)
                    .addComponent(turnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(applyInt1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyInt2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyInt3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyInt4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyInt5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(applyDiff1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                                .addComponent(int1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                            .addComponent(diff1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(diff2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diff3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diff4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diff5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(int2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyDiff2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(int3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(applyDiff3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(applyDiff4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(applyDiff5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(int4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(int5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(myst1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myst2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myst3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myst4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myst5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(answerField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void myst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myst1ActionPerformed
        if(mystPressed[0] == false && !activeQuestion){  
            questionType = "Mystery";
            ptsAdded = 100;
            showQuestion();
            myst1.setBackground(new Color(255,213,0));
            mystPressed[0] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_myst1ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void myst2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myst2ActionPerformed
        if(mystPressed[1] == false && !activeQuestion){  
            questionType = "Mystery";
            ptsAdded = 200;
            showQuestion();
            myst2.setBackground(new Color(255,213,0));
            mystPressed[1] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_myst2ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void myst3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myst3ActionPerformed
        if(mystPressed[2] == false && !activeQuestion){  
            questionType = "Mystery";
            ptsAdded = 300;
            showQuestion();
            myst3.setBackground(new Color(255,213,0));
            mystPressed[2] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_myst3ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void myst4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myst4ActionPerformed
        if(mystPressed[3] == false && !activeQuestion){  
            questionType = "Mystery";
            ptsAdded = 400;
            showQuestion();
            myst4.setBackground(new Color(255,213,0));
            mystPressed[3] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_myst4ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void myst5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myst5ActionPerformed
        if(mystPressed[4] == false && !activeQuestion){  
            questionType = "Mystery";
            ptsAdded = 500;
            showQuestion();
            myst5.setBackground(new Color(255,213,0));
            mystPressed[4] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_myst5ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void diff2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diff2ActionPerformed
        if(diffPressed[1] == false && !activeQuestion){  
            questionType = "Diff";
            ptsAdded = 200;
            showQuestion();
            diff2.setBackground(new Color(255,213,0));
            diffPressed[1] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_diff2ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void diff3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diff3ActionPerformed
        if(diffPressed[2] == false && !activeQuestion){  
            questionType = "Diff";
            ptsAdded = 300;
            showQuestion();
            diff3.setBackground(new Color(255,213,0));
            diffPressed[2] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_diff3ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void diff4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diff4ActionPerformed
        if(diffPressed[3] == false && !activeQuestion){  
            questionType = "Diff";
            ptsAdded = 400;
            showQuestion();
            diff4.setBackground(new Color(255,213,0));
            diffPressed[3] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_diff4ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void diff5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diff5ActionPerformed
        if(diffPressed[4] == false && !activeQuestion){  
            questionType = "Diff";
            ptsAdded = 500;
            showQuestion();
            diff5.setBackground(new Color(255,213,0));
            diffPressed[4] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_diff5ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void diff1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diff1ActionPerformed
        if(diffPressed[0] == false && !activeQuestion){  
            questionType = "Diff";
            ptsAdded = 100;
            showQuestion();
            diff1.setBackground(new Color(255,213,0));
            diffPressed[0] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_diff1ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyDiff2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiff2ActionPerformed
        if(applyDiffPressed[1] == false && !activeQuestion){  
            questionType = "ApplyDiff";
            ptsAdded = 200;
            showQuestion();
            applyDiff2.setBackground(new Color(255,213,0));
            applyDiffPressed[1] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyDiff2ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyDiff3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiff3ActionPerformed
        if(applyDiffPressed[2] == false && !activeQuestion){  
            questionType = "ApplyDiff";
            ptsAdded = 300;
            showQuestion();
            applyDiff3.setBackground(new Color(255,213,0));
            applyDiffPressed[2] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyDiff3ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyDiff4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiff4ActionPerformed
        if(applyDiffPressed[3] == false && !activeQuestion){  
            questionType = "ApplyDiff";
            ptsAdded = 400;
            showQuestion();
            applyDiff4.setBackground(new Color(255,213,0));
            applyDiffPressed[3] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyDiff4ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyDiff5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiff5ActionPerformed
        if(applyDiffPressed[4] == false && !activeQuestion){  
            questionType = "ApplyDiff";
            ptsAdded = 500;
            showQuestion();
            applyDiff5.setBackground(new Color(255,213,0));
            applyDiffPressed[4] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyDiff5ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyDiff1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDiff1ActionPerformed
        if(applyDiffPressed[0] == false && !activeQuestion){  
            questionType = "ApplyDiff";
            ptsAdded = 100;
            showQuestion();
            applyDiff1.setBackground(new Color(255,213,0));
            applyDiffPressed[0] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyDiff1ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyInt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyInt2ActionPerformed
        if(applyIntPressed[1] == false && !activeQuestion){  
            questionType = "ApplyInt";
            ptsAdded = 200;
            applyInt2.setBackground(new Color(255,213,0));
            showQuestion();
            applyIntPressed[1] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyInt2ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyInt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyInt3ActionPerformed
        if(applyIntPressed[2] == false && !activeQuestion){  
            questionType = "ApplyInt";
            ptsAdded = 300;
            applyInt3.setBackground(new Color(255,213,0));
            showQuestion();
            applyIntPressed[2] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyInt3ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyInt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyInt4ActionPerformed
        if(applyIntPressed[3] == false && !activeQuestion){  
            questionType = "ApplyInt";
            ptsAdded = 400;
            applyInt4.setBackground(new Color(255,213,0));
            showQuestion();
            applyIntPressed[3] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyInt4ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyInt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyInt5ActionPerformed
        if(applyIntPressed[4] == false && !activeQuestion){  
            questionType = "ApplyInt";
            ptsAdded = 500;
            applyInt5.setBackground(new Color(255,213,0));
            showQuestion();
            applyIntPressed[4] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyInt5ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void applyInt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyInt1ActionPerformed
        if(applyIntPressed[0] == false && !activeQuestion){  
            questionType = "ApplyInt";
            ptsAdded = 100;
            applyInt1.setBackground(new Color(255,213,0));
            showQuestion();
            applyIntPressed[0] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_applyInt1ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void int2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_int2ActionPerformed
        if(intPressed[1] == false && !activeQuestion){  
            questionType = "Int";
            ptsAdded = 200;
            int2.setBackground(new Color(255,213,0));
            showQuestion();
            intPressed[1] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_int2ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void int3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_int3ActionPerformed
        if(intPressed[2] == false && !activeQuestion){  
            questionType = "Int";
            ptsAdded = 300;
            int3.setBackground(new Color(255,213,0));
            showQuestion();
            intPressed[2] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_int3ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void int4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_int4ActionPerformed
        if(intPressed[3] == false && !activeQuestion){  
            questionType = "Int";
            ptsAdded = 400;
            int4.setBackground(new Color(255,213,0));
            showQuestion();
            intPressed[3] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_int4ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void int5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_int5ActionPerformed
        if(intPressed[4] == false && !activeQuestion){  
            questionType = "Int";
            ptsAdded = 500;
            int5.setBackground(new Color(255,213,0));
            showQuestion();            
            intPressed[4] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_int5ActionPerformed

    /**
     * Checks if button is pressed; if it is, the appropriate question is generated and the button is disabled.
     * @param evt Button press action.
     */
    private void int1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_int1ActionPerformed
        if(intPressed[0] == false && !activeQuestion){  
            questionType = "Int";
            ptsAdded = 100;
            int1.setBackground(new Color(255,213,0));
            showQuestion();
            intPressed[0] = true;
            questionType = "";
            activeQuestion = true;
        }
    }//GEN-LAST:event_int1ActionPerformed

    /**
     * Checks answer entered by the user, and adds points to appropriate player if correct.
     * @param evt Button press action.
     */
    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // Get the user's answer
        try {
            double answer = Double.parseDouble(answerField.getText().trim());
            answer = Math.round(answer*100.0)/100.0;
            
            clip.stop();
            clip = AudioSystem.getClip();
            
            intro = AudioSystem.getAudioInputStream(introFile);
            correct = AudioSystem.getAudioInputStream(correctFile);
            incorrect = AudioSystem.getAudioInputStream(incorrectFile);

            // Get the correct answer from the check button's client property
            double correctAnswer = (double) check.getClientProperty("correctAnswer");
            correctAnswer = Math.round(correctAnswer*100.0)/100.0;
            
            if (correctAnswer == 0.0 && answer == correctAnswer) { //correct answer- need to separate due to tolerance factor involving division by 0 otherwise
                resultLabel.setText("Correct! Answer: " + correctAnswer);
                clip.open(correct);
                clip.start();
                if(turn == 1) {
                      playerScores[turn-1] += ptsAdded;
                      player1Label.setText("Player 1 Score: " + String.valueOf(playerScores[turn-1]));
                      player1Label.repaint();
                } else if (turn == 2) {
                      playerScores[turn-1] += ptsAdded;
                      player2Label.setText("Player 2 Score: " + String.valueOf(playerScores[turn-1]));
                      player2Label.repaint();
                }
            } else if (Math.abs((answer-correctAnswer)/correctAnswer)<0.005) { //non-zero correct answer
                resultLabel.setText("Correct! Answer: " + correctAnswer);
                clip.open(correct);
                clip.start();
                if(turn == 1) {
                      playerScores[turn-1] += ptsAdded;
                      player1Label.setText("Player 1 Score: " + String.valueOf(playerScores[turn-1]));
                      player1Label.repaint();
                } else if (turn == 2) {
                      playerScores[turn-1] += ptsAdded;
                      player2Label.setText("Player 2 Score: " + String.valueOf(playerScores[turn-1]));
                      player2Label.repaint();
                }
            } else { //Incorrect answer
                clip.open(incorrect);
                clip.start();
                resultLabel.setText("Incorrect. Answer: " + correctAnswer);
            }
            
            ptsAdded = 0;
            changeTurn();
            activeQuestion = false;
            answerField.setText("");
            
            if(isWinner()) { //Checks for a winner.
                if(playerScores[0] > playerScores[1]) {
                    resultLabel.setText(resultLabel.getText() + "\n\nPlayer 1 Wins!!!");
                } else if (playerScores[1] > playerScores[0]){
                    resultLabel.setText(resultLabel.getText() + "\n\nPlayer 2 Wins!!!");
                } else {
                    resultLabel.setText(resultLabel.getText() + "\n\nTie!!!");
                }
                clip.stop();
                introFile = new File("resources\\intro.wav");           
                intro = AudioSystem.getAudioInputStream(introFile);            
                clip = AudioSystem.getClip();          
                clip.open(intro);
                clip.start();
            }
        } catch (Exception e){}
    }//GEN-LAST:event_checkActionPerformed

    /**
     * Restarts the game if the button is pressed.
     * @param evt Button press action.
     */
    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        mystPressed = new boolean[5];
        diffPressed = new boolean[5];
        applyDiffPressed = new boolean[5];
        applyIntPressed = new boolean[5];
        intPressed = new boolean[5];
        
        ptsAdded = 0;
        questionType = "";
        
        turn = 1;
        
        playerScores = new int[numPlayers];
        
        Color jeopardy = new Color(10,14,169);
        myst1.setBackground(jeopardy);
        myst2.setBackground(jeopardy);
        myst3.setBackground(jeopardy);
        myst4.setBackground(jeopardy);
        myst5.setBackground(jeopardy);
        
        diff1.setBackground(jeopardy);
        diff2.setBackground(jeopardy);
        diff3.setBackground(jeopardy);
        diff4.setBackground(jeopardy);
        diff5.setBackground(jeopardy);
        
        applyDiff1.setBackground(jeopardy);
        applyDiff2.setBackground(jeopardy);
        applyDiff3.setBackground(jeopardy);
        applyDiff4.setBackground(jeopardy);
        applyDiff5.setBackground(jeopardy);
        
        applyInt1.setBackground(jeopardy);
        applyInt2.setBackground(jeopardy);
        applyInt3.setBackground(jeopardy);
        applyInt4.setBackground(jeopardy);
        applyInt5.setBackground(jeopardy);
        
        int1.setBackground(jeopardy);
        int2.setBackground(jeopardy);
        int3.setBackground(jeopardy);
        int4.setBackground(jeopardy);
        int5.setBackground(jeopardy);
                
        activeQuestion = false;
        clip.stop();
        
        try {
            introFile = new File("resources\\intro.wav");
            correctFile = new File("resources\\correct.wav");
            incorrectFile = new File("resources\\incorrect.wav");
            
            intro = AudioSystem.getAudioInputStream(introFile);
            correct = AudioSystem.getAudioInputStream(correctFile);
            incorrect = AudioSystem.getAudioInputStream(incorrectFile);
            
            clip = AudioSystem.getClip();
            
            clip.open(intro);
            clip.start();
        } catch (Exception e) {}
        
        player1Label.setText("Player 1 Score: 0");
        player2Label.setText("Player 2 Score: 0");
        turnLabel.setText("Player 1's Turn");
        turnLabel.setBackground(new Color(230,255,251));
        questionLabel.setText("  1. Select a question.\n  2. The question will appear at the bottom (here). \n  3. "
                + "Answer with two decimal places, even if the answer is a whole \n      number. Assume radians "
                + "for trigonometric functions.\n  4. Check who's turn it is in the top right corner.");
        resultLabel.setText("");
        this.repaint();
    }//GEN-LAST:event_restartActionPerformed

    /**
     * Shows the help menu.
     * @param evt Button press action.
     */
    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        
        if(activeQuestion) {
            questionLabel.setText(questionLabel.getText() + "\n\n -------------------------------------------------------------------\n 1. Select a question.\n  2. The question will appear at the bottom (here). \n  3. "
                + "Answer with two decimal places, even if the answer is a whole \n      number. Assume radians "
                + "for trigonometric functions.\n  4. Check who's turn it is in the top right corner.");        
        } else {
            questionLabel.setText("  1. Select a question.\n  2. The question will appear at the bottom (here). \n  3. "
                + "Answer with two decimal places, even if the answer is a whole \n      number. Assume radians "
                + "for trigonometric functions.\n  4. Check who's turn it is in the top right corner.");        
        }
    }//GEN-LAST:event_helpActionPerformed

    /**
     * Shows the credits menu.
     * @param evt Button press action.
     */
    private void creditsLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditsLabelActionPerformed
        if(activeQuestion) {
            questionLabel.setText(questionLabel.getText() + "\n\n -------------------------------------------------------------------\n  Names: Ishan Garg, Pranav Mahabal, and Krish Patel. \n  Course: MCV4U0-1\n  Date: January 17, 2023\n  Teacher: Ms. Iulia Gugoiu");
        } else {
            questionLabel.setText("  Names: Ishan Garg, Pranav Mahabal, and Krish Patel. \n  Course: MCV4U0-1"
                    + "\n  Date: January 17, 2023\n  Teacher: Ms. Iulia Gugoiu");
        }
    }//GEN-LAST:event_creditsLabelActionPerformed
    
    /**
     * Displays the appropriate question.
     */
    private void showQuestion() {
        String question = "";
        double correctAnswer = 0.0;
        
        resultLabel.setText("");
        
        this.repaint();
        turnLabel.repaint();
        switch (questionType) {
            case "Mystery" -> {
                question = mystQ.getQuestion(ptsAdded);
                correctAnswer = mystQ.getCorrectAns();
            }
            case "Diff" -> {
                question = diffQ.getQuestion(ptsAdded);
                correctAnswer = diffQ.getCorrectAns();
            }
            case "ApplyDiff" -> {
                question = applyDiffQ.getQuestion(ptsAdded);
                correctAnswer = applyDiffQ.getCorrectAns();
            }
            case "ApplyInt" -> {
                question = applyIntQ.getQuestion(ptsAdded);
                correctAnswer = applyIntQ.getCorrectAns();
            }
            case "Int" -> {
                question = intQ.getQuestion(ptsAdded);
                correctAnswer = intQ.getCorrectAns();
            }
        }
        
        questionLabel.setText(question);
        check.putClientProperty("correctAnswer", correctAnswer);
    }
    
    /**
     * Switches who's turn it is.
     */
    private void changeTurn() {
        turn++;
        if(turn > numPlayers) {
            turn = 1;
        }
        turnLabel.setText("Player " + turn + "'s Turn");
        if(turn == 1) {
            turnLabel.setBackground(new Color(230,255,251));
        } else if(turn == 2) {
            turnLabel.setBackground(new Color(255,230,234));
        }
        turnLabel.repaint();
    }
    
    /**
     * Checks if there is a winner.
     * @return whether there is a winner.
     */
    private boolean isWinner() {
        boolean win = true;
        for(int i = 0; i<5; i++) {
            if(!diffPressed[i]) {
                win = false;
            }
            if(!applyDiffPressed[i]) {
                win = false;
            }
            if(!intPressed[i]) {
                win = false;
            }
            if(!applyIntPressed[i]) {
                win = false;
            }
            if(!mystPressed[i]) {
                win = false;
            }
        }
        return win;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField answerField;
    private javax.swing.JButton applyDiff1;
    private javax.swing.JButton applyDiff2;
    private javax.swing.JButton applyDiff3;
    private javax.swing.JButton applyDiff4;
    private javax.swing.JButton applyDiff5;
    private javax.swing.JButton applyInt1;
    private javax.swing.JButton applyInt2;
    private javax.swing.JButton applyInt3;
    private javax.swing.JButton applyInt4;
    private javax.swing.JButton applyInt5;
    private javax.swing.JButton check;
    private javax.swing.JButton creditsLabel;
    private javax.swing.JButton diff1;
    private javax.swing.JButton diff2;
    private javax.swing.JButton diff3;
    private javax.swing.JButton diff4;
    private javax.swing.JButton diff5;
    private javax.swing.JButton help;
    private javax.swing.JButton int1;
    private javax.swing.JButton int2;
    private javax.swing.JButton int3;
    private javax.swing.JButton int4;
    private javax.swing.JButton int5;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel menuTitle;
    private javax.swing.JButton myst1;
    private javax.swing.JButton myst2;
    private javax.swing.JButton myst3;
    private javax.swing.JButton myst4;
    private javax.swing.JButton myst5;
    private javax.swing.JTextArea mysteryLabel;
    private javax.swing.JTextArea mysteryLabel1;
    private javax.swing.JTextArea mysteryLabel2;
    private javax.swing.JTextArea mysteryLabel3;
    private javax.swing.JTextArea mysteryLabel4;
    private javax.swing.JTextField player1Label;
    private javax.swing.JTextField player2Label;
    private javax.swing.JTextArea questionLabel;
    private javax.swing.JButton restart;
    private javax.swing.JTextArea resultLabel;
    private javax.swing.JLabel turnLabel;
    // End of variables declaration//GEN-END:variables
}
